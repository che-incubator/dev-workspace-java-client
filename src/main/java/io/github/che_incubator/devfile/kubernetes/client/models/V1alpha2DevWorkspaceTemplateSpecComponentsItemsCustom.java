/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.che_incubator.devfile.kubernetes.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Custom component whose logic is implementation-dependant and should be provided by the user possibly through some dedicated controller
 */
@ApiModel(description = "Custom component whose logic is implementation-dependant and should be provided by the user possibly through some dedicated controller")

public class V1alpha2DevWorkspaceTemplateSpecComponentsItemsCustom {
  public static final String SERIALIZED_NAME_COMPONENT_CLASS = "componentClass";
  @SerializedName(SERIALIZED_NAME_COMPONENT_CLASS)
  private String componentClass;

  public static final String SERIALIZED_NAME_EMBEDDED_RESOURCE = "embeddedResource";
  @SerializedName(SERIALIZED_NAME_EMBEDDED_RESOURCE)
  private Object embeddedResource;


  public V1alpha2DevWorkspaceTemplateSpecComponentsItemsCustom componentClass(String componentClass) {
    
    this.componentClass = componentClass;
    return this;
  }

   /**
   * Class of component that the associated implementation controller should use to process this command with the appropriate logic
   * @return componentClass
  **/
  @ApiModelProperty(required = true, value = "Class of component that the associated implementation controller should use to process this command with the appropriate logic")

  public String getComponentClass() {
    return componentClass;
  }


  public void setComponentClass(String componentClass) {
    this.componentClass = componentClass;
  }


  public V1alpha2DevWorkspaceTemplateSpecComponentsItemsCustom embeddedResource(Object embeddedResource) {
    
    this.embeddedResource = embeddedResource;
    return this;
  }

   /**
   * Additional free-form configuration for this custom component that the implementation controller will know how to use
   * @return embeddedResource
  **/
  @ApiModelProperty(required = true, value = "Additional free-form configuration for this custom component that the implementation controller will know how to use")

  public Object getEmbeddedResource() {
    return embeddedResource;
  }


  public void setEmbeddedResource(Object embeddedResource) {
    this.embeddedResource = embeddedResource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha2DevWorkspaceTemplateSpecComponentsItemsCustom v1alpha2DevWorkspaceTemplateSpecComponentsItemsCustom = (V1alpha2DevWorkspaceTemplateSpecComponentsItemsCustom) o;
    return Objects.equals(this.componentClass, v1alpha2DevWorkspaceTemplateSpecComponentsItemsCustom.componentClass) &&
        Objects.equals(this.embeddedResource, v1alpha2DevWorkspaceTemplateSpecComponentsItemsCustom.embeddedResource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(componentClass, embeddedResource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha2DevWorkspaceTemplateSpecComponentsItemsCustom {\n");
    sb.append("    componentClass: ").append(toIndentedString(componentClass)).append("\n");
    sb.append("    embeddedResource: ").append(toIndentedString(embeddedResource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

